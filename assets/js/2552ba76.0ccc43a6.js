"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[63],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),h=i,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:i,o[1]=p;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6286:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={title:"The pipeline repositories"},o=void 0,p={unversionedId:"advanced/pipeline_repository",id:"advanced/pipeline_repository",isDocsHomePage:!1,title:"The pipeline repositories",description:"The pipeline repositories are the ones generated by the SQAaaS API in order to",source:"@site/docs/advanced/pipeline_repository.md",sourceDirName:"advanced",slug:"/advanced/pipeline_repository",permalink:"/advanced/pipeline_repository",version:"current",frontMatter:{title:"The pipeline repositories"},sidebar:"tutorialSidebar",previous:{title:"Scan GitHub organisation in Jenkins",permalink:"/advanced/jenkins_scan_organisation"}},s=[{value:"How the SQAaaS depends on it?",id:"how-the-sqaaas-depends-on-it",children:[]},{value:"Outcome",id:"outcome",children:[]}],l={toc:s};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The pipeline repositories are the ones generated by the SQAaaS API in order to\ncarry out the execution of the generated pipelines. They contain the JePL\nfiles, and optionally (according on how the pipeline was configured), they\nmight also have a copy of the code base."),(0,i.kt)("h3",{id:"how-the-sqaaas-depends-on-it"},"How the SQAaaS depends on it?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The Pipeline as a Service uses pipeline repositories when the ",(0,i.kt)("a",{parentName:"li",href:"../pipeline_as_a_service/summary#execute"},"user triggers\nthe execution of the pipeline"),"."),(0,i.kt)("li",{parentName:"ul"},"The Quality Assessment and Awarding (QAA) module uses the pipeline\nrepositories as part of its operation. Pipelines are composed for the\nfully-fledged criteria analysis, and thus, they need to be executed before\nbeing validated.")),(0,i.kt)("h3",{id:"outcome"},"Outcome"),(0,i.kt)("p",null,"Depending on the SQAaaS module, the name of the pipeline repository matches the\npatterns below:"),(0,i.kt)("h4",{id:"pipeline-as-a-service"},"Pipeline as a Service"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"pipeline_repository == 'https://github.com/' + github_organisation + pipeline_name + '.sqaaas'\n")),(0,i.kt)("p",null,"where the ",(0,i.kt)("inlineCode",{parentName:"p"},"pipeline_name")," is the value provided in\n",(0,i.kt)("a",{parentName:"p",href:"/pipeline_as_a_service/the_2_step_process"},"the step zero"),'. So if you used\nthe current SQAaaS production instance and named your pipeline as "my_pipeline",\nthe resultant name for the pipeline repository is:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://github.com/eosc-synergy/my_pipeline.sqaaas`\n")),(0,i.kt)("h4",{id:"qaa"},"QAA"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"pipeline_repository == 'https://github.com/' + github_organisation + pipeline_name + '.assess.sqaaas'\n")),(0,i.kt)("p",null,"where the ",(0,i.kt)("inlineCode",{parentName:"p"},"pipeline_name"),' is the name of the analysed repository. In this case,\nif you are checking "',(0,i.kt)("a",{parentName:"p",href:"https://github.com/my_user/my_repo%22"},'https://github.com/my_user/my_repo"')," repository in the\ncurrent SQAaaS production instance, the resultant name for the pipeline\nrepository is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://github.com/eosc-synergy/my_repo.assess.sqaaas`\n")))}c.isMDXComponent=!0}}]);