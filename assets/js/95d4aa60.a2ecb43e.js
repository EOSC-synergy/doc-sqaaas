"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[443],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=c(n),u=r,m=h["".concat(s,".").concat(u)]||h[u]||d[u]||o;return n?a.createElement(m,l(l({ref:t},p),{},{components:n})):a.createElement(m,l({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1539:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={title:"Tools for the quality assessment"},l=void 0,i={unversionedId:"advanced/tools_for_the_assessment",id:"advanced/tools_for_the_assessment",isDocsHomePage:!1,title:"Tools for the quality assessment",description:"Once the 'Run Assessment' button is clicked the SQAaaS will go through two",source:"@site/docs/advanced/tools_for_the_assessment.md",sourceDirName:"advanced",slug:"/advanced/tools_for_the_assessment",permalink:"/advanced/tools_for_the_assessment",version:"current",frontMatter:{title:"Tools for the quality assessment"},sidebar:"tutorialSidebar",previous:{title:"The pipeline repositories",permalink:"/advanced/pipeline_repository"}},s=[{value:"Tool breakdown",id:"tool-breakdown",children:[]},{value:"Customizing the behavior of tools: linting and styling",id:"customizing-the-behavior-of-tools-linting-and-styling",children:[{value:"flake8 (Python)",id:"flake8-python",children:[]},{value:"checkstyle (Java)",id:"checkstyle-java",children:[]}]}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Once the 'Run Assessment' button is clicked the SQAaaS will go through two\nmain stages: 1) ",(0,r.kt)("em",{parentName:"p"},"the pipeline creation and execution"),", 2) ",(0,r.kt)("em",{parentName:"p"},"the validation\nof the results"),". The former leverages the Pipeline as a Service module in\norder to compose and run a pipeline with all the supported quality criteria."),(0,r.kt)("p",null,"The specific tools and commands to run are built upon the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eosc-synergy/sqaaas-tooling"},"SQAaaS tooling metadata"),"."),(0,r.kt)("p",null,"Once having the results from the pipeline, the next step is to validate the\nobtained results. This task is done with the aid of the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eosc-synergy/sqaaas-reporting"},"SQAaaS reporting")," component,\na plugin-based tool that parses each output and estimates whether each\nquality criterion (as well as associated subcriteria) has been successfully\nfulfilled by the code being analysed."),(0,r.kt)("h2",{id:"tool-breakdown"},"Tool breakdown"),(0,r.kt)("p",null,"Validating some of the defined quality criteria requires the support of\nspecific tools, based commonly on the programming language/s in use. Examples\nrange from testing frameworks and linters to style checkers. The table below\nsummarizes the current tools supported by the SQAaaS platform:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:"center"},"VCS"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Code Management (QC.Man, QC.Acc)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"git")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:"center"},"Python"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Golang"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Ruby"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Java"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Javascript"),(0,r.kt)("th",{parentName:"tr",align:"center"},"JSON"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Dockerfile"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Code Style (QC.Sty)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"flake8"),(0,r.kt)("td",{parentName:"tr",align:"center"},"staticcheck"),(0,r.kt)("td",{parentName:"tr",align:"center"},"rubocop"),(0,r.kt)("td",{parentName:"tr",align:"center"},"checkstyle"),(0,r.kt)("td",{parentName:"tr",align:"center"},"stylelint"),(0,r.kt)("td",{parentName:"tr",align:"center"},"jsonlint"),(0,r.kt)("td",{parentName:"tr",align:"center"},"hadolint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Security Static Analysis (QC.Sec)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"bandit"),(0,r.kt)("td",{parentName:"tr",align:"center"},"gosec"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:"center"},"Markdown"),(0,r.kt)("th",{parentName:"tr",align:"center"},"reStructuredText"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Documentation (QC.Doc)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"markdownlint"),(0,r.kt)("td",{parentName:"tr",align:"center"},"restructuredtext-lint")))),(0,r.kt)("h2",{id:"customizing-the-behavior-of-tools-linting-and-styling"},"Customizing the behavior of tools: linting and styling"),(0,r.kt)("p",null,"Style rules, and in some particular circumstances, those related to linting\naspects might not be considered when assessing the code. Legacy or code that\nhas been developed over a extended period of time cannot be easily adapted to\nnew quality standards or trends. As a result, the SQAaaS allows passing\nexceptions to the default rules through the use of configuration files (as long\nas the tool supports them)."),(0,r.kt)("p",null,"Throughout this section we summarize how to alter the default behavior of the\nstandards used by the tools supported in the SQAaaS platform. It is important\nto stress that the configuration file/s must exist in the version of the code\nrepository that we are assessing through the SQAaaS, and placed in the location\nexpected by the tool."),(0,r.kt)("h3",{id:"flake8-python"},"flake8 (Python)"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://flake8.pycqa.org/"},(0,r.kt)("inlineCode",{parentName:"a"},"flake8"))," allows\n",(0,r.kt)("a",{parentName:"p",href:"https://flake8.pycqa.org/en/latest/user/configuration.html#configuration-locations"},"3 different locations"),"\nfor the configuration files. Either way, you need to have a ",(0,r.kt)("inlineCode",{parentName:"p"},"[flake8]")," section\nwhere you will add your exceptions. An example that excludes a set of rules and\ndefines a maximum line length of 120, would be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[flake8]\nextend-ignore = E402, F841, F821, E722\nmax-line-length = 120\n")),(0,r.kt)("h3",{id:"checkstyle-java"},"checkstyle (Java)"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://checkstyle.sourceforge.io/"},(0,r.kt)("inlineCode",{parentName:"a"},"checkstyle"))," is currently supported as a\nMaven's plugin. Following the documentation, the\n",(0,r.kt)("a",{parentName:"p",href:"https://checkstyle.sourceforge.io/sun_style.html"},"Sun code style")," is the one\nused by default. Based on the\n",(0,r.kt)("a",{parentName:"p",href:"https://maven.apache.org/plugins/maven-checkstyle-plugin/check-mojo.html#checkstyle-check"},"Maven's goal ",(0,r.kt)("inlineCode",{parentName:"a"},"checkstyle:check")),",\nyou can define your own rules by passing the\n",(0,r.kt)("a",{parentName:"p",href:"https://maven.apache.org/plugins/maven-checkstyle-plugin/checkstyle-mojo.html#configLocation"},(0,r.kt)("inlineCode",{parentName:"a"},"configLocation")," parameter"),",\nsuch as in:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-checkstyle-plugin</artifactId>\n    <version>3.2.2</version>\n    <configuration>\n        <configLocation>checkstyle.xml</configLocation>\n    </configuration>\n</plugin>\n")),(0,r.kt)("p",null,"Note that your checkstyle's plugin version might be different from the one\nused in this example. The ",(0,r.kt)("inlineCode",{parentName:"p"},"configLocation")," points to a file named\n",(0,r.kt)("inlineCode",{parentName:"p"},"checkstyle.xml")," and this is where all modifications shall be added. For\ninstance, if we would like to increase Sun's default line length to 120 chars\n(by default is 80), we would modify Sun's rules (already added in\n",(0,r.kt)("inlineCode",{parentName:"p"},"checkstyle.xml"),") as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'<module name="LineLength">\n    <property name="max" value="120"/>\n</module>\n')))}p.isMDXComponent=!0}}]);