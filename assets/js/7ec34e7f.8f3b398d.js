"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[99],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>p});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=c(r),p=a,g=u["".concat(l,".").concat(p)]||u[p]||h[p]||i;return r?n.createElement(g,s(s({ref:t},d),{},{components:r})):n.createElement(g,s({ref:t},d))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6489:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={title:"Analysing the results"},s=void 0,o={unversionedId:"quality_assessment_and_awarding/report",id:"quality_assessment_and_awarding/report",title:"Analysing the results",description:"The results obtained by the QAA module highlight the achievements that",source:"@site/docs/quality_assessment_and_awarding/report.md",sourceDirName:"quality_assessment_and_awarding",slug:"/quality_assessment_and_awarding/report",permalink:"/quality_assessment_and_awarding/report",draft:!1,tags:[],version:"current",frontMatter:{title:"Analysing the results"},sidebar:"tutorialSidebar",previous:{title:"Triggering the Assessment",permalink:"/quality_assessment_and_awarding/operation"},next:{title:"Sharing the badges",permalink:"/quality_assessment_and_awarding/share"}},l={},c=[{value:"Awarding through Badges",id:"awarding-through-badges",level:3}],d={toc:c};function h(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The results obtained by the QAA module highlight the achievements that\ncharacterize a given code repository, and point developers or code owners to\nthose specific parts where quality can be improved. Thus, the ultimate goal is\nto increase the overall quality of the code so that the software product takes\ncredit."),(0,a.kt)("p",null,"The results view shows a report detailing the validity of the criteria covered\nduring the assessment. This validity is estimated on the basis of the results\nand criticality provided by the individual subcriteria. This means that only\nthe subcriteria with the highest level of criticality is considered for the\ncriterion's overall success."),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/criterion_results.png"})),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The codes that identify the subcriteria are aligned, as stated throughout the\ndocs, with the ",(0,a.kt)("a",{parentName:"p",href:"https://indigo-dc.github.io/sqa-baseline/"},"A set of Common Software Quality Assurance Baseline Criteria\nfor Research Projects")," document.")),(0,a.kt)("h3",{id:"awarding-through-badges"},"Awarding through Badges"),(0,a.kt)("p",null,"Reporting is complemented with awarding when the software being analysed\nreaches a minimum level of quality. This is based on the fact that, similarly\nto the subcriteria covered above, not all the criteria have the same level of\nimportance. We have previously established those levels in the\n",(0,a.kt)("a",{parentName:"p",href:"/quality_assessment_and_awarding/synergy_badging_approach"},"Badging in EOSC-Synergy"),"."),(0,a.kt)("p",null,"Whenever the assessed code repository has reached any of the required levels\nof quality, a digital badge will be displayed on top of the report as shown\nin the next image:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/award.png"})))}h.isMDXComponent=!0}}]);